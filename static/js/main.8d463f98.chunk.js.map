{"version":3,"sources":["components/Button.js","features/userSlice.js","features/todoSlice.js","components/Navbar.js","components/Input.js","components/AddTodo.js","pages/Home.js","components/Login.js","pages/Details.js","pages/EditTask.js","pages/404Page.js","components/TodoItem.js","components/EmptyTodo.js","pages/ListTasks.js","App.js","app/store.js","index.js"],"names":["Button","text","title","type","btnClass","btnId","btnFun","className","id","onClick","userSlice","createSlice","name","initialState","userInfo","reducers","login","state","action","payload","logout","actions","selectUser","user","todoSlice","todos","addTodo","unshift","updateCheckBox","map","item","status","updateTodo","desc","deleteTodo","filter","removeAllTodo","selectTodo","Navbar","dispatch","useDispatch","useSelector","to","src","alt","userName","userPhotoUrl","localStorage","clear","Input","placeholder","value","inputFun","icon","useState","passVisibility","setPassVisibility","inputTypeRef","useRef","onChange","ref","autoComplete","current","AddTodo","setTitle","setDesc","history","useHistory","style","padding","e","target","preventDefault","length","alert","Date","getTime","toString","push","Home","Login","setUserName","userEmail","setUserEmail","setUserPhotoUrl","userPassword","setUserPassword","includes","match","Details","todoData","setTodoData","todoItem","useParams","useEffect","itemData","elem","backgroundColor","maxWidth","marginTop","color","borderRadius","paddingRight","paddingLeft","paddingBottom","display","justifyContent","alignItems","margin","lineHeight","wordWrap","EditTask","refDetailData","todo","PageNotFound","TodoItem","forwardRef","props","todoStatus","setTodoStatus","checkboxRef","checked","slice","EmptyTodo","ListTasks","searchTodo","setSearchTodo","todosList","setTodos","toLowerCase","toUpperCase","textAlign","fontSize","staggerDelayBy","appearAnimation","enterAnimation","leaveAnimation","duration","easing","App","exact","path","rootReducer","combineReducers","userReducer","todoReducer","persistedStore","stateStr","getItem","JSON","parse","undefined","console","error","loadFromLocalStorage","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d463f98.chunk.js","sourcesContent":["import \"../styles/Button.css\";\r\nconst Button = ({ text, title, type, btnClass, btnId, btnFun }) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      title={title ? title : null}\r\n      className={btnClass}\r\n      id={btnId}\r\n      onClick={btnFun}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    userInfo: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.userInfo = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.userInfo;\r\n\r\nexport default userSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n};\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState,\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.todos.unshift(action.payload);\r\n    },\r\n\r\n    updateCheckBox: (state, action) => {\r\n      const { id } = action.payload;\r\n      state.todos.map((item) => {\r\n        if (id === item.id) {\r\n          if (item.status === \"Active\") {\r\n            item.status = \"Completed\";\r\n          } else {\r\n            item.status = \"Active\";\r\n          }\r\n        }\r\n        return item.status;\r\n      });\r\n    },\r\n\r\n    updateTodo: (state, action) => {\r\n      const { id, title, desc } = action.payload;\r\n      state.todos.map((item) => {\r\n        if (id === item.id) {\r\n          if (title) {\r\n            item.title = title;\r\n          }\r\n          if (desc) {\r\n            item.desc = desc;\r\n          }\r\n        }\r\n        return item.title && item.desc;\r\n      });\r\n    },\r\n\r\n    deleteTodo: (state, action) => {\r\n      const { id } = action.payload;\r\n      state.todos = state.todos.filter((item) => {\r\n        return item.id !== id;\r\n      });\r\n    },\r\n\r\n    removeAllTodo: (state) => {\r\n      state.todos = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTodo,\r\n  updateCheckBox,\r\n  updateTodo,\r\n  deleteTodo,\r\n  removeAllTodo,\r\n} = todoSlice.actions;\r\n\r\nexport const selectTodo = (state) => state.todos.todos;\r\n\r\nexport default todoSlice.reducer;\r\n","import Button from \"./Button\";\r\nimport \"../styles/Navbar.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout, selectUser } from \"../features/userSlice\";\r\nimport { removeAllTodo } from \"../features/todoSlice\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logout());\r\n    dispatch(removeAllTodo());\r\n    localStorage.clear();\r\n  };\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"logo__box\">\r\n          <NavLink to=\"/\" className=\"link\">\r\n            <div className=\"logo\">\r\n              <div className=\"logo__image\">\r\n                <img src=\"images/notodo01.svg\" alt=\"undraw.co_notodo.svg\" />\r\n              </div>\r\n              <h3 className=\"logo__title\">TodoNote</h3>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n        {user && (\r\n          <>\r\n            <div className=\"user__box\" title={user.userName}>\r\n              {!user.userPhotoUrl ? (\r\n                <div className=\"user__avtar\">{user && user.userName[0]}</div>\r\n              ) : (\r\n                <img\r\n                  className=\"user__image\"\r\n                  src={user.userPhotoUrl}\r\n                  alt=\"userAvtar\"\r\n                />\r\n              )}\r\n            </div>\r\n            <Button\r\n              type=\"btn\"\r\n              btnClass=\"logout__btn\"\r\n              btnId=\"logoutBtn\"\r\n              text=\"logout\"\r\n              title=\"Logout\"\r\n              btnFun={logoutUser}\r\n            />\r\n          </>\r\n        )}\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState, useRef } from \"react\";\r\nimport \"../styles/Input.css\";\r\nimport { RiEyeCloseFill, RiEyeFill } from \"react-icons/ri\";\r\n\r\nconst Input = ({ type, placeholder, value, inputFun, icon }) => {\r\n  const [passVisibility, setPassVisibility] = useState(false);\r\n  const inputTypeRef = useRef(\"\");\r\n\r\n  const passwordStatus = () => {\r\n    setPassVisibility(!passVisibility);\r\n    if (!passVisibility) {\r\n      inputTypeRef.current.type = \"text\";\r\n    } else {\r\n      inputTypeRef.current.type = \"password\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input\">\r\n        <input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={inputFun}\r\n          ref={inputTypeRef}\r\n          autoComplete=\"true\"\r\n        />\r\n        {icon && (\r\n          <>\r\n            {icon === \"password\" && (\r\n              <>\r\n                <div className=\"input__icon__box\" onClick={passwordStatus}>\r\n                  {!passVisibility ? (\r\n                    <RiEyeCloseFill className=\"input__icon\" id=\"closeEye\" />\r\n                  ) : (\r\n                    <RiEyeFill className=\"input__icon\" id=\"openEye\" />\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { addTodo } from \"../features/todoSlice\";\r\n\r\nconst AddTodo = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  const setTodoTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const setTodoDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n\r\n  const addTodoData = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !desc) {\r\n      return alert(\"Please enter title and desc\");\r\n    } else if (title.length > 50) {\r\n      return alert(\"A valid title has a max length of 50 chars\");\r\n    } else if (desc.length > 256) {\r\n      return alert(\"A valid description has a max length of 256 chars\");\r\n    }\r\n    dispatch(\r\n      addTodo({\r\n        title,\r\n        desc,\r\n        status: \"Active\",\r\n        id: new Date().getTime().toString(),\r\n      })\r\n    );\r\n    history.push(\"/list-tasks\");\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <>\r\n          <div className=\"imageBx\" id=\"addTodoimage\">\r\n            <img src=\"images/addTodo01.svg\" alt=\"list-svg\" />\r\n          </div>\r\n          <div className=\"input__box\">\r\n            <form className=\"form\" style={{ padding: \"0px\" }}>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Todo title here...\"\r\n                value={title}\r\n                inputFun={setTodoTitle}\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Todo description here...\"\r\n                value={desc}\r\n                inputFun={setTodoDesc}\r\n              />\r\n              <Button\r\n                btnId=\"addToListBtn\"\r\n                btnClass=\"action__btn\"\r\n                text=\"Add to list\"\r\n                btnFun={addTodoData}\r\n                type=\"submit\"\r\n              />\r\n            </form>\r\n            <Link to=\"/list-tasks\" className=\"link\">\r\n              <Button\r\n                btnId=\"addTodo\"\r\n                btnClass=\"go__to__list\"\r\n                text=\"Go to todo list\"\r\n                type=\"btn\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import AddTodo from \"../components/AddTodo\";\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <AddTodo />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../features/userSlice\";\r\nimport \"../styles/Login.css\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nconst Login = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPhotoUrl, setUserPhotoUrl] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setName = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n  const setEmail = (e) => {\r\n    setUserEmail(e.target.value);\r\n  };\r\n  const setPassword = (e) => {\r\n    setUserPassword(e.target.value);\r\n  };\r\n  const setPhotoUrl = (e) => {\r\n    setUserPhotoUrl(e.target.value);\r\n  };\r\n\r\n  const loginUser = (e) => {\r\n    e.preventDefault();\r\n    if (!userName || !userEmail || !userPassword) {\r\n      return alert(\"Please enter all your credentials\");\r\n    } else if (!userEmail.includes(\"@gmail.com\")) {\r\n      return alert(\"Email sohuld have @gmail.com\");\r\n    } else if (userPassword.length < 6) {\r\n      return alert(\"A valid password is at least 6 chars long\");\r\n    } else if (!userPassword.match(/[a-z]/g) || !userPassword.match(/[A-Z]/g)) {\r\n      return alert(\r\n        \"A valid password has at least one uppercase and one lowercase character\"\r\n      );\r\n    } else if (!userPassword.match(/[0-9]/g)) {\r\n      return alert(\"A valid password has at least one number\");\r\n    }\r\n    dispatch(\r\n      login({\r\n        userName,\r\n        userEmail,\r\n        userPassword,\r\n        userPhotoUrl,\r\n      })\r\n    );\r\n\r\n    history.push(\"/list-tasks\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login__box\">\r\n        <div className=\"imageBx\">\r\n          <img src=\"images/login.svg\" alt=\"loginsvgimage\" />\r\n        </div>\r\n        <form className=\"form\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={userName}\r\n            inputFun={setName}\r\n          />\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={userEmail}\r\n            inputFun={setEmail}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={userPassword}\r\n            inputFun={setPassword}\r\n            icon=\"password\"\r\n          />\r\n          <Input\r\n            type=\"url\"\r\n            placeholder=\"Photo url (optional)\"\r\n            value={userPhotoUrl}\r\n            inputFun={setPhotoUrl}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            btnClass=\"action__btn\"\r\n            text=\"Login\"\r\n            btnId=\"loginBtn\"\r\n            btnFun={loginUser}\r\n          />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"../styles/Todo.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { selectTodo, deleteTodo } from \"../features/todoSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Button from \"../components/Button\";\r\n\r\nconst Details = () => {\r\n  const [todoData, setTodoData] = useState(null);\r\n  const todoItem = useSelector(selectTodo);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const boxStyle = {\r\n    backgroundColor: \"#5635df\",\r\n    maxWidth: \"800px\",\r\n    marginTop: \"100px\",\r\n    color: \"#fff\",\r\n    borderRadius: \"10px\",\r\n    paddingRight: \"8px\",\r\n    paddingLeft: \"8px\",\r\n    paddingBottom: \"20px\",\r\n  };\r\n\r\n  const detailHeadStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: \"#ffffff\",\r\n    padding: \"0px 2px\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const itemData = todoItem.filter((elem) => {\r\n      return elem.id === id;\r\n    });\r\n    setTodoData(itemData);\r\n  }, [id, todoItem]);\r\n\r\n  const deleteTodoItem = () => {\r\n    dispatch(\r\n      deleteTodo({\r\n        id,\r\n      })\r\n    );\r\n    history.push(\"/list-tasks\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\" style={boxStyle}>\r\n        <div className=\"todo__detailHead\" style={detailHeadStyle}>\r\n          <small>Item Id: {todoData && todoData[0].id}</small>\r\n          <small>Status: {todoData && todoData[0].status}</small>\r\n        </div>\r\n        <div className=\"todo\">\r\n          <h3\r\n            style={{\r\n              margin: \"15px 0px 8px\",\r\n              lineHeight: \"1.4\",\r\n              wordWrap: \"break-word\",\r\n            }}\r\n          >\r\n            Title: {todoData && todoData[0].title}\r\n          </h3>\r\n          <p\r\n            style={{\r\n              lineHeight: \"1.4\",\r\n              wordWrap: \"break-word\",\r\n            }}\r\n          >\r\n            Description: {todoData && todoData[0].desc}\r\n          </p>\r\n        </div>\r\n        <div className=\"action__box filter--btn\">\r\n          <Button\r\n            btnClass=\"go__to__list\"\r\n            btnId=\"mainUpdateBtn\"\r\n            type=\"btn\"\r\n            text=\"delete todo\"\r\n            btnFun={deleteTodoItem}\r\n          />\r\n          <Link to={`/edit-task/${id}`} className=\"link\">\r\n            <Button\r\n              btnClass=\"go__to__list\"\r\n              btnId=\"mainUpdateBtn\"\r\n              type=\"btn\"\r\n              text=\"edit task\"\r\n              title=\"Go to list\"\r\n            />\r\n          </Link>\r\n        </div>\r\n        {/* <Link to=\"/list-tasks\" className=\"link\" style={{flex: \"1\"}}>\r\n          <Button\r\n            btnClass=\"go__to__list\"\r\n            btnId=\"goToList\"\r\n            type=\"btn\"\r\n            text=\"go to list\"\r\n            title=\"Go to list\"\r\n          />\r\n        </Link> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import \"../styles/Todo.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { updateTodo } from \"../features/todoSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTodo } from \"../features/todoSlice\";\r\n\r\nconst EditTask = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const todos = useSelector(selectTodo);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const refDetailData = useRef(\"\");\r\n\r\n  const boxStyle = {\r\n    backgroundColor: \"#5635df\",\r\n    maxWidth: \"800px\",\r\n    marginTop: \"100px\",\r\n    color: \"#fff\",\r\n    borderRadius: \"10px\",\r\n    paddingRight: \"8px\",\r\n    paddingLeft: \"8px\",\r\n    paddingBottom: \"20px\",\r\n  };\r\n\r\n  const detailHeadStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: \"#ffffff\",\r\n    margin: \"10px 0px 30px\",\r\n    padding: \"0px 2px\",\r\n  };\r\n\r\n  const updateTodoTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const updateTodoDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n\r\n  const setUpdatedData = () => {\r\n    if (!title || !title) {\r\n      alert(\"You did'nt change any thing your data will remain same\");\r\n    }\r\n    if (title.length > 50) {\r\n      return alert(\"A valid updated title has a max length of 50 chars\");\r\n    } else if (desc.length > 120) {\r\n      return alert(\"A valid updated description has a max length of 120 chars\");\r\n    }\r\n    dispatch(updateTodo({ id, title, desc }));\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n    history.push(\"/list-tasks\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    refDetailData.current = todos.filter((todo) => {\r\n      return todo.id === id;\r\n    });\r\n    setTitle(refDetailData.current[0].title);\r\n    setDesc(refDetailData.current[0].desc);\r\n  }, [id, todos]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\" style={boxStyle}>\r\n        <div className=\"todo__detailHead\" style={detailHeadStyle}>\r\n          <small>Item Id: {id}</small>\r\n        </div>\r\n        <Input\r\n          placeholder=\"New title here...\"\r\n          type=\"text\"\r\n          inputFun={updateTodoTitle}\r\n          value={title}\r\n        />\r\n        <Input\r\n          placeholder=\"New description here...\"\r\n          type=\"text\"\r\n          inputFun={updateTodoDesc}\r\n          value={desc}\r\n        />\r\n        <div className=\"action__box filter--todo\">\r\n          <Button\r\n            type=\"btn\"\r\n            text=\"save changes\"\r\n            btnClass=\"go__to__list\"\r\n            btnId=\"mainUpdateBtn\"\r\n            btnFun={setUpdatedData}\r\n          />\r\n          <Link to=\"/list-tasks\" className=\"link\">\r\n            <Button\r\n              btnClass=\"go__to__list\"\r\n              btnId=\"mainUpdateBtn\"\r\n              type=\"btn\"\r\n              text=\"Go to list\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../styles/PageNotFound.css\";\r\nimport Button from \"../components/Button\";\r\nconst PageNotFound = () => {\r\n  return (\r\n    <>\r\n      <div className=\"no__page__found__image__box\">\r\n        <img src=\"/images/pageNotFound.svg\" alt=\"404__image\" />\r\n      </div>\r\n      <Link to=\"/list-tasks\" className=\"link\">\r\n        <Button\r\n          type=\"btn\"\r\n          text=\"go home\"\r\n          btnId=\"goHomeBtn\"\r\n          btnClass=\"go__to__list\"\r\n        />\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import \"../styles/TodoItem.css\";\r\nimport React, { useState, useEffect, useRef, forwardRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteTodo, updateCheckBox } from \"../features/todoSlice\";\r\nimport { RiDeleteBin6Line, RiPencilLine, RiEyeLine } from \"react-icons/ri\";\r\nimport Button from \"./Button\";\r\n\r\nconst TodoItem = forwardRef((props, ref) => {\r\n  const { title, desc, id, status } = props;\r\n  const [todoStatus, setTodoStatus] = useState(false);\r\n  const checkboxRef = useRef(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const getCheckboxStatus = () => {\r\n    dispatch(\r\n      updateCheckBox({\r\n        id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteTodoItem = () => {\r\n    // const finalDelete = window.confirm(\r\n    //   \"Are you sure you want to delete this item\"\r\n    // );\r\n    // if (!finalDelete) {\r\n    //   return;\r\n    // }\r\n    dispatch(deleteTodo({ id }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (status === \"Completed\") {\r\n      setTodoStatus(true);\r\n      checkboxRef.current.checked = true;\r\n    } else if (status === \"Active\") {\r\n      setTodoStatus(false);\r\n      checkboxRef.current.checked = false;\r\n    }\r\n  }, [status]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"todo__item\"\r\n      id={todoStatus ? \"completed__todo\" : null}\r\n    >\r\n      <div className={todoStatus ? \"completeTodo__noty\" : \"completed\"}>\r\n        <p>Completed!!</p>\r\n      </div>\r\n      <div className=\"todo__head\">\r\n        <Link className=\"link\" to={`/details/${id}`}>\r\n          <h3> {title.length >= 15 ? title.slice(0, 15) + \"...\" : title} </h3>\r\n        </Link>\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"checkbox__input\"\r\n            onChange={getCheckboxStatus}\r\n            ref={checkboxRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <p> {desc.length >= 200 ? desc.slice(0, 200) + \"...\" : desc} </p>\r\n      <div className=\"action__box todo--list--action--box\">\r\n        <Link to={`/details/${id}`} className=\"link__btn\">\r\n          <Button\r\n            type=\"btn\"\r\n            btnClass=\"small__btn todo--btn\"\r\n            btnId=\"readBtn\"\r\n            text={<RiEyeLine />}\r\n            title=\"Read Todo\"\r\n          />\r\n        </Link>\r\n        <Link to={`/edit-task/${id}`} className=\"link__btn\">\r\n          <Button\r\n            type=\"btn\"\r\n            btnClass=\"small__btn todo--btn\"\r\n            btnId=\"updateBtn\"\r\n            text={<RiPencilLine />}\r\n            title=\"Update Todo\"\r\n          />\r\n        </Link>\r\n        <Button\r\n          type=\"btn\"\r\n          btnClass=\"small__btn todo--btn\"\r\n          btnId=\"deleteBtn\"\r\n          text={<RiDeleteBin6Line />}\r\n          title=\"Delete Todo\"\r\n          btnFun={deleteTodoItem}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TodoItem;\r\n","import \"../styles/EmptyTodo.css\";\r\nconst EmptyTodo = () => {\r\n  return (\r\n    <div className=\"empty__todoBx\">\r\n      <div className=\"empty__todoBx__image__wrapper\">\r\n        <img\r\n          className=\"empty__todoBx__image\"\r\n          src=\"images/notodo04.svg\"\r\n          alt=\"nodata.svg\"\r\n        />\r\n        <p className=\"empty__todoBx__desc\">You don't have any task todo.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTodo;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport TodoItem from \"../components/TodoItem\";\r\nimport { selectTodo, removeAllTodo } from \"../features/todoSlice\";\r\nimport EmptyTodo from \"../components/EmptyTodo\";\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\n\r\nconst ListTasks = () => {\r\n  const [searchTodo, setSearchTodo] = useState(\"\");\r\n  const todosList = useSelector(selectTodo);\r\n  const [todos, setTodos] = useState(todosList);\r\n  const dispatch = useDispatch();\r\n\r\n  const filterAllTodo = () => {\r\n    setSearchTodo(\"\");\r\n    setTodos(todosList);\r\n  };\r\n\r\n  const filterActiveTodo = () => {\r\n    setSearchTodo(\"\");\r\n    setTodos(\r\n      todosList.filter((todo) => {\r\n        return todo.status === \"Active\";\r\n      })\r\n    );\r\n  };\r\n\r\n  const filterCompletedTodo = () => {\r\n    setTodos(\r\n      todosList.filter((todo) => {\r\n        return todo.status === \"Completed\";\r\n      })\r\n    );\r\n    setSearchTodo(\"\");\r\n  };\r\n\r\n  const removeAllItems = () => {\r\n    // const finalDelete = window.confirm(\"Want to delete all todo? Sure? \");\r\n    // if (!finalDelete) {\r\n    //   return;\r\n    // }\r\n    dispatch(removeAllTodo());\r\n  };\r\n\r\n  const getSearchValue = (e) => {\r\n    setSearchTodo(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTodos(\r\n      todosList.filter((todo) => {\r\n        return (\r\n          todo.title.includes(searchTodo) ||\r\n          todo.desc.includes(searchTodo) ||\r\n          todo.title.includes(searchTodo.toLowerCase()) ||\r\n          todo.title.includes(searchTodo.toUpperCase()) ||\r\n          todo.desc.includes(searchTodo.toLowerCase()) ||\r\n          todo.desc.includes(searchTodo.toUpperCase())\r\n        );\r\n      })\r\n    );\r\n  }, [searchTodo, todosList]);\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"link\">\r\n        {todosList.length < 1 ? (\r\n          <Button\r\n            type=\"btn\"\r\n            text=\"Add task\"\r\n            btnClass=\"go__to__list\"\r\n            btnId=\"addTodo\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            type=\"btn\"\r\n            text=\"Add More task\"\r\n            btnClass=\"go__to__list\"\r\n            btnId=\"addTodo\"\r\n          />\r\n        )}\r\n      </Link>\r\n      {!todosList.length < 1 && (\r\n        <>\r\n          <Button\r\n            btnId=\"removeAllTodo\"\r\n            btnClass=\"go__to__list\"\r\n            text=\"remove all todos\"\r\n            btnFun={removeAllItems}\r\n            type=\"btn\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search for todos\"\r\n            type=\"text\"\r\n            value={searchTodo}\r\n            inputFun={getSearchValue}\r\n          />\r\n          <div className=\"action__box filter--btn\">\r\n            <Button\r\n              btnId=\"updateBtn\"\r\n              btnClass=\"action__btn\"\r\n              text=\"All\"\r\n              type=\"btn\"\r\n              btnFun={filterAllTodo}\r\n            />\r\n            <Button\r\n              btnId=\"updateBtn\"\r\n              btnClass=\"action__btn\"\r\n              text=\"Active\"\r\n              type=\"btn\"\r\n              btnFun={filterActiveTodo}\r\n            />\r\n            <Button\r\n              btnId=\"updateBtn\"\r\n              btnClass=\"action__btn\"\r\n              text=\"Completed\"\r\n              type=\"btn\"\r\n              btnFun={filterCompletedTodo}\r\n            />\r\n          </div>\r\n          {todos.length < 1 && (\r\n            <p\r\n              style={{\r\n                color: \"#ffffff\",\r\n                marginTop: \"80px\",\r\n                textAlign: \"center\",\r\n                fontSize: \"17px\",\r\n                wordWrap: \"break-word\",\r\n              }}\r\n            >\r\n              Not such todo is available.\r\n            </p>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <FlipMove\r\n        staggerDelayBy={120}\r\n        appearAnimation=\"accordionHorizontal\"\r\n        enterAnimation=\"accordionHorizontal\"\r\n        leaveAnimation=\"elevator\"\r\n        duration={250}\r\n        easing=\"ease-in-out\"\r\n      >\r\n        {todos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            id={todo.id}\r\n            title={todo.title}\r\n            desc={todo.desc}\r\n            status={todo.status}\r\n          />\r\n        ))}\r\n      </FlipMove>\r\n      {todosList.length < 1 && <EmptyTodo />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTasks;\r\n","import Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport \"./styles/App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectTodo } from \"./features/todoSlice\";\nimport Login from \"./components/Login\";\nimport Details from \"./pages/Details\";\nimport EditTask from \"./pages/EditTask\";\nimport PageNotFound from \"./pages/404Page\";\nimport ListTasks from \"./pages/ListTasks\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const todos = useSelector(selectTodo);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"wrapper\">\n          <div className=\"box\">\n            <Switch>\n              <Route exact path=\"/\">\n                {!user ? <Login /> : <Home />}\n              </Route>\n\n              {user && todos ? (\n                <Route path=\"/details/:id\">\n                  <Details />\n                </Route>\n              ) : (\n                <Redirect to=\"/\"></Redirect>\n              )}\n\n              {user && todos ? (\n                <Route path=\"/edit-task/:id\">\n                  <EditTask />\n                </Route>\n              ) : (\n                <Redirect to=\"/\"></Redirect>\n              )}\n\n              <Route path=\"/list-tasks\">\n                <ListTasks />\n              </Route>\n\n              <Route>\n                <PageNotFound />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\nimport todoReducer from \"../features/todoSlice\";\r\n\r\nconst saveToLocalStorage = (state) => {\r\n  try {\r\n    localStorage.setItem(\"state\", JSON.stringify(state));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const stateStr = localStorage.getItem(\"state\");\r\n    return stateStr ? JSON.parse(stateStr) : undefined;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  todos: todoReducer,\r\n});\r\n\r\nconst persistedStore = loadFromLocalStorage();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  persistedStore,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState());\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}